import { NgClass } from '@angular/common';
import { afterNextRender, Component, computed, effect, ElementRef, inject, input, Renderer2, signal, viewChild } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { HtmlAttributesDirective } from '../shared/html-attr.directive';
import { IconSetService } from '../icon-set';
import { transformName } from './icon.utils';
import * as i0 from "@angular/core";
export class IconComponent {
    #renderer;
    #elementRef;
    #sanitizer;
    #iconSet;
    #hostElement;
    constructor() {
        this.#renderer = inject(Renderer2);
        this.#elementRef = inject(ElementRef);
        this.#sanitizer = inject(DomSanitizer);
        this.#iconSet = inject(IconSetService);
        this.#hostElement = signal(undefined);
        this.content = input();
        this.attributes = input({ role: 'img' });
        this.customClasses = input();
        this.size = input('');
        this.title = input();
        this.use = input('');
        this.height = input();
        this.width = input();
        this.name = input('', { transform: transformName });
        this.viewBoxInput = input(undefined, { alias: 'viewBox' });
        this.svgElementRef = viewChild('svgElement');
        this.svgElementEffect = effect(() => {
            const svgElementRef = this.svgElementRef();
            const hostElement = this.#hostElement()?.nativeElement;
            if (svgElementRef && hostElement) {
                const svgElement = svgElementRef.nativeElement;
                hostElement.classList?.values()?.forEach((item) => {
                    this.#renderer.addClass(svgElement, item);
                });
                const parentElement = this.#renderer.parentNode(hostElement);
                this.#renderer.insertBefore(parentElement, svgElement, hostElement);
                this.#renderer.removeChild(parentElement, hostElement);
            }
        });
        this.viewBox = computed(() => {
            return this.viewBoxInput() ?? this.scale();
        });
        this.innerHtml = computed(() => {
            const codeVal = this.code();
            const code = Array.isArray(codeVal) ? (codeVal?.[1] ?? codeVal?.[0] ?? '') : codeVal || '';
            // todo proper sanitize
            // const sanitized = this.sanitizer.sanitize(SecurityContext.HTML, code);
            return this.#sanitizer.bypassSecurityTrustHtml(this.#titleCode() + code || '');
        });
        this.#titleCode = computed(() => {
            return this.title() ? `<title>${this.title()}</title>` : '';
        });
        this.code = computed(() => {
            const content = this.content();
            if (content) {
                return content;
            }
            const name = this.name();
            if (this.#iconSet && name) {
                return this.#iconSet.getIcon(name);
            }
            if (name && !this.#iconSet?.icons[name]) {
                console.warn(`c-icon component: The '${name}' icon not found. Add it to the IconSet service for use with the 'name' property. \n`, name);
            }
            return '';
        });
        this.scale = computed(() => {
            return Array.isArray(this.code()) && (this.code()?.length ?? 0) > 1 ? `0 0 ${this.code()?.[0]}` : '0 0 64 64';
        });
        this.computedSize = computed(() => {
            const addCustom = !this.size() && (this.width() || this.height());
            return this.size() === 'custom' || addCustom ? 'custom-size' : this.size();
        });
        this.computedClasses = computed(() => {
            const classes = {
                icon: true,
                [`icon-${this.computedSize()}`]: !!this.computedSize()
            };
            return this.customClasses() ?? classes;
        });
        afterNextRender(() => {
            this.#hostElement.set(this.#elementRef);
        });
    }
    #titleCode;
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.12", ngImport: i0, type: IconComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.12", type: IconComponent, isStandalone: true, selector: "c-icon", inputs: { content: { classPropertyName: "content", publicName: "content", isSignal: true, isRequired: false, transformFunction: null }, attributes: { classPropertyName: "attributes", publicName: "attributes", isSignal: true, isRequired: false, transformFunction: null }, customClasses: { classPropertyName: "customClasses", publicName: "customClasses", isSignal: true, isRequired: false, transformFunction: null }, size: { classPropertyName: "size", publicName: "size", isSignal: true, isRequired: false, transformFunction: null }, title: { classPropertyName: "title", publicName: "title", isSignal: true, isRequired: false, transformFunction: null }, use: { classPropertyName: "use", publicName: "use", isSignal: true, isRequired: false, transformFunction: null }, height: { classPropertyName: "height", publicName: "height", isSignal: true, isRequired: false, transformFunction: null }, width: { classPropertyName: "width", publicName: "width", isSignal: true, isRequired: false, transformFunction: null }, name: { classPropertyName: "name", publicName: "name", isSignal: true, isRequired: false, transformFunction: null }, viewBoxInput: { classPropertyName: "viewBoxInput", publicName: "viewBox", isSignal: true, isRequired: false, transformFunction: null } }, host: { attributes: { "ngSkipHydration": "true" }, styleAttribute: "display: none" }, viewQueries: [{ propertyName: "svgElementRef", first: true, predicate: ["svgElement"], descendants: true, isSignal: true }], exportAs: ["cIconComponent"], ngImport: i0, template: "@if (!use() && !!code()) {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    [attr.width]=\"width()\"\n    [attr.height]=\"height() || width()\"\n    [attr.viewBox]=\"viewBox() ?? scale()\"\n    [innerHtml]=\"innerHtml()\"\n    [ngClass]=\"computedClasses()\"\n    [cHtmlAttr]=\"attributes()\"\n    aria-hidden=\"true\"\n    pointer-events=\"none\"\n    role=\"img\"\n    #svgElement\n  >\n  </svg>\n} @else if (use()) {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    [attr.width]=\"width()\"\n    [attr.height]=\"height() || width()\"\n    [ngClass]=\"computedClasses()\"\n    [cHtmlAttr]=\"attributes()\"\n    aria-hidden=\"true\"\n    pointer-events=\"none\"\n    role=\"img\"\n    #svgElement\n  >\n    <use [attr.href]=\"use()\"></use>\n  </svg>\n}\n", styles: [".icon{display:inline-block;color:inherit;text-align:center;vertical-align:-.125rem;fill:currentColor}.icon:not(.icon-c-s):not(.icon-custom-size){width:1rem;height:1rem;font-size:1rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-xxl{width:2rem;height:2rem;font-size:2rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-xl{width:1.5rem;height:1.5rem;font-size:1.5rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-lg{width:1.25rem;height:1.25rem;font-size:1.25rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-sm{width:.875rem;height:.875rem;font-size:.875rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-3xl{width:3rem;height:3rem;font-size:3rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-4xl{width:4rem;height:4rem;font-size:4rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-5xl{width:5rem;height:5rem;font-size:5rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-6xl{width:6rem;height:6rem;font-size:6rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-7xl{width:7rem;height:7rem;font-size:7rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-8xl{width:8rem;height:8rem;font-size:8rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-9xl{width:9rem;height:9rem;font-size:9rem}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: HtmlAttributesDirective, selector: "[cHtmlAttr]", inputs: ["cHtmlAttr"], exportAs: ["cHtmlAttr"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.12", ngImport: i0, type: IconComponent, decorators: [{
            type: Component,
            args: [{ exportAs: 'cIconComponent', imports: [NgClass, HtmlAttributesDirective], selector: 'c-icon', standalone: true, host: { ngSkipHydration: 'true', style: 'display: none' }, template: "@if (!use() && !!code()) {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    [attr.width]=\"width()\"\n    [attr.height]=\"height() || width()\"\n    [attr.viewBox]=\"viewBox() ?? scale()\"\n    [innerHtml]=\"innerHtml()\"\n    [ngClass]=\"computedClasses()\"\n    [cHtmlAttr]=\"attributes()\"\n    aria-hidden=\"true\"\n    pointer-events=\"none\"\n    role=\"img\"\n    #svgElement\n  >\n  </svg>\n} @else if (use()) {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    [attr.width]=\"width()\"\n    [attr.height]=\"height() || width()\"\n    [ngClass]=\"computedClasses()\"\n    [cHtmlAttr]=\"attributes()\"\n    aria-hidden=\"true\"\n    pointer-events=\"none\"\n    role=\"img\"\n    #svgElement\n  >\n    <use [attr.href]=\"use()\"></use>\n  </svg>\n}\n", styles: [".icon{display:inline-block;color:inherit;text-align:center;vertical-align:-.125rem;fill:currentColor}.icon:not(.icon-c-s):not(.icon-custom-size){width:1rem;height:1rem;font-size:1rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-xxl{width:2rem;height:2rem;font-size:2rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-xl{width:1.5rem;height:1.5rem;font-size:1.5rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-lg{width:1.25rem;height:1.25rem;font-size:1.25rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-sm{width:.875rem;height:.875rem;font-size:.875rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-3xl{width:3rem;height:3rem;font-size:3rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-4xl{width:4rem;height:4rem;font-size:4rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-5xl{width:5rem;height:5rem;font-size:5rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-6xl{width:6rem;height:6rem;font-size:6rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-7xl{width:7rem;height:7rem;font-size:7rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-8xl{width:8rem;height:8rem;font-size:8rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-9xl{width:9rem;height:9rem;font-size:9rem}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktaWNvbnMtYW5ndWxhci9zcmMvbGliL2ljb24vaWNvbi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktaWNvbnMtYW5ndWxhci9zcmMvbGliL2ljb24vaWNvbi5jb21wb25lbnQuc3ZnIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMxQyxPQUFPLEVBQ0wsZUFBZSxFQUNmLFNBQVMsRUFDVCxRQUFRLEVBQ1IsTUFBTSxFQUNOLFVBQVUsRUFDVixNQUFNLEVBQ04sS0FBSyxFQUNMLFNBQVMsRUFDVCxNQUFNLEVBQ04sU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUV6RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUN4RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRTdDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxjQUFjLENBQUM7O0FBVzdDLE1BQU0sT0FBTyxhQUFhO0lBQ2YsU0FBUyxDQUFxQjtJQUM5QixXQUFXLENBQXNCO0lBQ2pDLFVBQVUsQ0FBd0I7SUFDbEMsUUFBUSxDQUEwQjtJQUNsQyxZQUFZLENBQWtEO0lBRXZFO1FBTlMsY0FBUyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM5QixnQkFBVyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNqQyxlQUFVLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ2xDLGFBQVEsR0FBRyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDbEMsaUJBQVksR0FBRyxNQUFNLENBQThCLFNBQVMs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QUksRUFBRSxLQUFLLFFBQVEsSUFBSSxTQUFTLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzdFLENBQUMsQ0FBQyxDQUFDO1FBRU0sb0JBQWUsR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFO1lBQ3ZDLE1BQU0sT0FBTyxHQUFHO2dCQUNkLElBQUksRUFBRSxJQUFJO2dCQUNWLENBQUMsUUFBUSxJQUFJLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFO2FBQ3ZELENBQUM7WUFDRixPQUFPLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxPQUFPLENBQUM7UUFDekMsQ0FBQyxDQUFDLENBQUM7UUFsRkQsZUFBZSxDQUFDLEdBQUcsRUFBRTtZQUNuQixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDMUMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBMENRLFVBQVUsQ0FFaEI7K0dBdkRRLGFBQWE7bUdBQWIsYUFBYSxtaURDN0IxQixrd0JBOEJBLGl2Q0RSWSxPQUFPLG9GQUFFLHVCQUF1Qjs7NEZBTy9CLGFBQWE7a0JBVHpCLFNBQVM7K0JBQ0UsZ0JBQWdCLFdBQ2pCLENBQUMsT0FBTyxFQUFFLHVCQUF1QixDQUFDLFlBQ2pDLFFBQVEsY0FDTixJQUFJLFFBR1YsRUFBRSxlQUFlLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxlQUFlLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0NsYXNzIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7XG4gIGFmdGVyTmV4dFJlbmRlcixcbiAgQ29tcG9uZW50LFxuICBjb21wdXRlZCxcbiAgZWZmZWN0LFxuICBFbGVtZW50UmVmLFxuICBpbmplY3QsXG4gIGlucHV0LFxuICBSZW5kZXJlcjIsXG4gIHNpZ25hbCxcbiAgdmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5cbmltcG9ydCB7IEh0bWxBdHRyaWJ1dGVzRGlyZWN0aXZlIH0gZnJvbSAnLi4vc2hhcmVkL2h0bWwtYXR0ci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSWNvblNldFNlcnZpY2UgfSBmcm9tICcuLi9pY29uLXNldCc7XG5pbXBvcnQgeyBJY29uU2l6ZSwgSUljb24sIE5nQ3NzQ2xhc3MgfSBmcm9tICcuL2ljb24uaW50ZXJmYWNlJztcbmltcG9ydCB7IHRyYW5zZm9ybU5hbWUgfSBmcm9tICcuL2ljb24udXRpbHMnO1xuXG5AQ29tcG9uZW50KHtcbiAgZXhwb3J0QXM6ICdjSWNvbkNvbXBvbmVudCcsXG4gIGltcG9ydHM6IFtOZ0NsYXNzLCBIdG1sQXR0cmlidXRlc0RpcmVjdGl2ZV0sXG4gIHNlbGVjdG9yOiAnYy1pY29uJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgc3R5bGVVcmxzOiBbJy4vaWNvbi5jb21wb25lbnQuc2NzcyddLFxuICB0ZW1wbGF0ZVVybDogJy4vaWNvbi5jb21wb25lbnQuc3ZnJyxcbiAgaG9zdDogeyBuZ1NraXBIeWRyYXRpb246ICd0cnVlJywgc3R5bGU6ICdkaXNwbGF5OiBub25lJyB9XG59KVxuZXhwb3J0IGNsYXNzIEljb25Db21wb25lbnQgaW1wbGVtZW50cyBJSWNvbiB7XG4gIHJlYWRvbmx5ICNyZW5kZXJlciA9IGluamVjdChSZW5kZXJlcjIpO1xuICByZWFkb25seSAjZWxlbWVudFJlZiA9IGluamVjdChFbGVtZW50UmVmKTtcbiAgcmVhZG9ubHkgI3Nhbml0aXplciA9IGluamVjdChEb21TYW5pdGl6ZXIpO1xuICByZWFkb25seSAjaWNvblNldCA9IGluamVjdChJY29uU2V0U2VydmljZSk7XG4gIHJlYWRvbmx5ICNob3N0RWxlbWVudCA9IHNpZ25hbDxFbGVtZW50UmVmPGFueT4gfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgYWZ0ZXJOZXh0UmVuZGVyKCgpID0+IHtcbiAgICAgIHRoaXMuI2hvc3RFbGVtZW50LnNldCh0aGlzLiNlbGVtZW50UmVmKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJlYWRvbmx5IGNvbnRlbnQgPSBpbnB1dDxzdHJpbmcgfCBzdHJpbmdbXSB8IGFueVtdPigpO1xuXG4gIHJlYWRvbmx5IGF0dHJpYnV0ZXMgPSBpbnB1dDxSZWNvcmQ8c3RyaW5nLCBhbnk+Pih7IHJvbGU6ICdpbWcnIH0pO1xuICByZWFkb25seSBjdXN0b21DbGFzc2VzID0gaW5wdXQ8TmdDc3NDbGFzcz4oKTtcbiAgcmVhZG9ubHkgc2l6ZSA9IGlucHV0PEljb25TaXplPignJyk7XG4gIHJlYWRvbmx5IHRpdGxlID0gaW5wdXQ8c3RyaW5nPigpO1xuICByZWFkb25seSB1c2UgPSBpbnB1dDxzdHJpbmc+KCcnKTtcbiAgcmVhZG9ubHkgaGVpZ2h0ID0gaW5wdXQ8c3RyaW5nPigpO1xuICByZWFkb25seSB3aWR0aCA9IGlucHV0PHN0cmluZz4oKTtcbiAgcmVhZG9ubHkgbmFtZSA9IGlucHV0KCcnLCB7IHRyYW5zZm9ybTogdHJhbnNmb3JtTmFtZSB9KTtcbiAgcmVhZG9ubHkgdmlld0JveElucHV0ID0gaW5wdXQ8c3RyaW5nIHwgdW5kZWZpbmVkPih1bmRlZmluZWQsIHsgYWxpYXM6ICd2aWV3Qm94JyB9KTtcblxuICByZWFkb25seSBzdmdFbGVtZW50UmVmID0gdmlld0NoaWxkPEVsZW1lbnRSZWY+KCdzdmdFbGVtZW50Jyk7XG5cbiAgcmVhZG9ubHkgc3ZnRWxlbWVudEVmZmVjdCA9IGVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3Qgc3ZnRWxlbWVudFJlZiA9IHRoaXMuc3ZnRWxlbWVudFJlZigpO1xuICAgIGNvbnN0IGhvc3RFbGVtZW50ID0gdGhpcy4jaG9zdEVsZW1lbnQoKT8ubmF0aXZlRWxlbWVudDtcbiAgICBpZiAoc3ZnRWxlbWVudFJlZiAmJiBob3N0RWxlbWVudCkge1xuICAgICAgY29uc3Qgc3ZnRWxlbWVudCA9IHN2Z0VsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgICAgIGhvc3RFbGVtZW50LmNsYXNzTGlzdD8udmFsdWVzKCk/LmZvckVhY2goKGl0ZW06IHN0cmluZykgPT4ge1xuICAgICAgICB0aGlzLiNyZW5kZXJlci5hZGRDbGFzcyhzdmdFbGVtZW50LCBpdGVtKTtcbiAgICAgIH0pO1xuICAgICAgY29uc3QgcGFyZW50RWxlbWVudCA9IHRoaXMuI3JlbmRlcmVyLnBhcmVudE5vZGUoaG9zdEVsZW1lbnQpO1xuICAgICAgdGhpcy4jcmVuZGVyZXIuaW5zZXJ0QmVmb3JlKHBhcmVudEVsZW1lbnQsIHN2Z0VsZW1lbnQsIGhvc3RFbGVtZW50KTtcbiAgICAgIHRoaXMuI3JlbmRlcmVyLnJlbW92ZUNoaWxkKHBhcmVudEVsZW1lbnQsIGhvc3RFbGVtZW50KTtcbiAgICB9XG4gIH0pO1xuXG4gIHJlYWRvbmx5IHZpZXdCb3ggPSBjb21wdXRlZCgoKSA9PiB7XG4gICAgcmV0dXJuIHRoaXMudmlld0JveElucHV0KCkgPz8gdGhpcy5zY2FsZSgpO1xuICB9KTtcblxuICByZWFkb25seSBpbm5lckh0bWwgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAgY29uc3QgY29kZVZhbCA9IHRoaXMuY29kZSgpO1xuICAgIGNvbnN0IGNvZGUgPSBBcnJheS5pc0FycmF5KGNvZGVWYWwpID8gKGNvZGVWYWw/LlsxXSA/PyBjb2RlVmFsPy5bMF0gPz8gJycpIDogY29kZVZhbCB8fCAnJztcbiAgICAvLyB0b2RvIHByb3BlciBzYW5pdGl6ZVxuICAgIC8vIGNvbnN0IHNhbml0aXplZCA9IHRoaXMuc2FuaXRpemVyLnNhbml0aXplKFNlY3VyaXR5Q29udGV4dC5IVE1MLCBjb2RlKTtcbiAgICByZXR1cm4gdGhpcy4jc2FuaXRpemVyLmJ5cGFzc1NlY3VyaXR5VHJ1c3RIdG1sKHRoaXMuI3RpdGxlQ29kZSgpICsgY29kZSB8fCAnJyk7XG4gIH0pO1xuXG4gIHJlYWRvbmx5ICN0aXRsZUNvZGUgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAgcmV0dXJuIHRoaXMudGl0bGUoKSA/IGA8dGl0bGU+JHt0aGlzLnRpdGxlKCl9PC90aXRsZT5gIDogJyc7XG4gIH0pO1xuXG4gIHJlYWRvbmx5IGNvZGUgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAgY29uc3QgY29udGVudCA9IHRoaXMuY29udGVudCgpO1xuICAgIGlmIChjb250ZW50KSB7XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgY29uc3QgbmFtZSA9IHRoaXMubmFtZSgpO1xuICAgIGlmICh0aGlzLiNpY29uU2V0ICYmIG5hbWUpIHtcbiAgICAgIHJldHVybiB0aGlzLiNpY29uU2V0LmdldEljb24obmFtZSk7XG4gICAgfVxuICAgIGlmIChuYW1lICYmICF0aGlzLiNpY29uU2V0Py5pY29uc1tuYW1lXSkge1xuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICBgYy1pY29uIGNvbXBvbmVudDogVGhlICcke25hbWV9JyBpY29uIG5vdCBmb3VuZC4gQWRkIGl0IHRvIHRoZSBJY29uU2V0IHNlcnZpY2UgZm9yIHVzZSB3aXRoIHRoZSAnbmFtZScgcHJvcGVydHkuIFxcbmAsXG4gICAgICAgIG5hbWVcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiAnJztcbiAgfSk7XG5cbiAgcmVhZG9ubHkgc2NhbGUgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodGhpcy5jb2RlKCkpICYmICh0aGlzLmNvZGUoKT8ubGVuZ3RoID8/IDApID4gMSA/IGAwIDAgJHt0aGlzLmNvZGUoKT8uWzBdfWAgOiAnMCAwIDY0IDY0JztcbiAgfSk7XG5cbiAgcmVhZG9ubHkgY29tcHV0ZWRTaXplID0gY29tcHV0ZWQoKCkgPT4ge1xuICAgIGNvbnN0IGFkZEN1c3RvbSA9ICF0aGlzLnNpemUoKSAmJiAodGhpcy53aWR0aCgpIHx8IHRoaXMuaGVpZ2h0KCkpO1xuICAgIHJldHVybiB0aGlzLnNpemUoKSA9PT0gJ2N1c3RvbScgfHwgYWRkQ3VzdG9tID8gJ2N1c3RvbS1zaXplJyA6IHRoaXMuc2l6ZSgpO1xuICB9KTtcblxuICByZWFkb25seSBjb21wdXRlZENsYXNzZXMgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAgY29uc3QgY2xhc3NlcyA9IHtcbiAgICAgIGljb246IHRydWUsXG4gICAgICBbYGljb24tJHt0aGlzLmNvbXB1dGVkU2l6ZSgpfWBdOiAhIXRoaXMuY29tcHV0ZWRTaXplKClcbiAgICB9O1xuICAgIHJldHVybiB0aGlzLmN1c3RvbUNsYXNzZXMoKSA/PyBjbGFzc2VzO1xuICB9KTtcbn1cbiIsIkBpZiAoIXVzZSgpICYmICEhY29kZSgpKSB7XG4gIDxzdmdcbiAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICBbYXR0ci53aWR0aF09XCJ3aWR0aCgpXCJcbiAgICBbYXR0ci5oZWlnaHRdPVwiaGVpZ2h0KCkgfHwgd2lkdGgoKVwiXG4gICAgW2F0dHIudmlld0JveF09XCJ2aWV3Qm94KCkgPz8gc2NhbGUoKVwiXG4gICAgW2lubmVySHRtbF09XCJpbm5lckh0bWwoKVwiXG4gICAgW25nQ2xhc3NdPVwiY29tcHV0ZWRDbGFzc2VzKClcIlxuICAgIFtjSHRtbEF0dHJdPVwiYXR0cmlidXRlcygpXCJcbiAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxuICAgIHBvaW50ZXItZXZlbnRzPVwibm9uZVwiXG4gICAgcm9sZT1cImltZ1wiXG4gICAgI3N2Z0VsZW1lbnRcbiAgPlxuICA8L3N2Zz5cbn0gQGVsc2UgaWYgKHVzZSgpKSB7XG4gIDxzdmdcbiAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICBbYXR0ci53aWR0aF09XCJ3aWR0aCgpXCJcbiAgICBbYXR0ci5oZWlnaHRdPVwiaGVpZ2h0KCkgfHwgd2lkdGgoKVwiXG4gICAgW25nQ2xhc3NdPVwiY29tcHV0ZWRDbGFzc2VzKClcIlxuICAgIFtjSHRtbEF0dHJdPVwiYXR0cmlidXRlcygpXCJcbiAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxuICAgIHBvaW50ZXItZXZlbnRzPVwibm9uZVwiXG4gICAgcm9sZT1cImltZ1wiXG4gICAgI3N2Z0VsZW1lbnRcbiAgPlxuICAgIDx1c2UgW2F0dHIuaHJlZl09XCJ1c2UoKVwiPjwvdXNlPlxuICA8L3N2Zz5cbn1cbiJdfQ==